import "pkg:/source/common.bs"

sub init()
	m.username = "tyler"
	' console.info(`HELLO ${m.username}`)
	' console.warn(`HELLO ${m.username}`)
	' console.error(`HELLO ${m.username}`)
	' console.log(`HELLO ${m.username}`)
	' console.assert(true, `HELLO ${m.username}`)
	' console.assert(false, `HELLO ${m.username}`)
	util.getNodeById("username").text = `${m.username}`

	
	' console.log(rodash.differenceBy([2.1, 1.2], [2.3, 3.4], rodash.cint))
	' console.log(rodash.differenceBy([{ "x": 2 }, { "x": 1 }], [{ "x": 1 }], "x")[0])
	' console.log(rodash.differenceBy([2.1, 1.2], [2.3, 3.4], rodash.cint))

	' ? rodash.isEqual("a", "b")
	' ? rodash.isEqual("a", "a")
	' objects = [{ "x": 1, "y": 2 }, { "x": 2, "y": 1 }]
	' console.log(rodash.internal.arrayToString(rodash.differenceWith(objects, [{ "x": 1, "y": 2 }], rodash.isEqual)))


	' users = [
	' 	{ "user": "barney",  "active": true },
	' 	{ "user": "fred",    "active": false },
	' 	{ "user": "pebbles", "active": false }
	' ]
	' console.log(rodash.dropRightWhile(users, function(user)
	' 	return NOT user.active
	' end function)[0])

	' users = [
	' 	{ "user": "barney",  "active": false },
	' 	{ "user": "fred",    "active": false },
	' 	{ "user": "pebbles", "active": true }
	' ]
	' console.log(rodash.internal.arrayToString(rodash.dropWhile(users, function(user)
	' 	return NOT user.active
	' end function)))
	' console.log(rodash.internal.arrayToString(rodash.dropWhile(users, { "user": "barney", "active": false })))
	' console.log(rodash.internal.arrayToString(rodash.dropWhile(users, ["active", false])))
	' console.log(rodash.internal.arrayToString(rodash.dropWhile(users, "active")))




	' console.log(rodash.internal.arrayToString(rodash.intersectionBy([2.1, 1.2], [2.3, 3.4], rodash.floor)))
	' arrayOne = [{"x": 1 }]
	' arrayTwo = [{ "x": 2 }, { "x": 1 }]
	' console.log(rodash.internal.arrayToString(rodash.intersectionBy(arrayOne, arrayTwo, "x")))

	' console.log(rodash.gt(3, 1))
	' console.log(rodash.gt(3, 3))
	' console.log(rodash.gt(1, 3))

	' console.log(rodash.gte(3, 1))
	' console.log(rodash.gte(3, 3))
	' console.log(rodash.gte(1, 3))



	' objectA = [
	' 	{ "user": "barney",  "active": true },
	' 	{ "user": "fred",    "active": false },
	' 	{ "user": "pebbles", "active": false }
	' ]

	' objectB = [
	' 	{ "user": "barney",  "active": true },
	' 	{ "user": "fred",    "active": false },
	' 	{ "user": "pebbles", "active": false }
	' ]
	' console.log(rodash.isEqual(objectA, objectB))

	' objectA = ["hello", "goodbye"]
	' objectB = ["hi", "goodbye"]

	' objectA = CreateObject("roSGNode", "node")
	' objectA.id = "goodbye"
	' objectB = CreateObject("roSGNode", "node")
	' objectB.id = "hello"


	' console.log(rodash.isEqualWith(objectA, objectB, function(objValue, othValue)
	' 	if isGreeting(objValue) AND isGreeting(othValue) then
	' 	    return true
	' 	end if
	' 	return false
	' end function))

	' function isGreeting(value)
	' 	regex = createObject("roRegex", "^h(?:i|ello)$", "i")
	' 	return regex.isMatch(value)
	' end function

	' console.log(rodash.isError({
	' 	"status": "error"
	' }))

	' console.log(rodash.isFinite(1))
	' console.log(rodash.isFinite(1e1000000))

	' console.log(rodash.isLength(-1))
	' console.log(rodash.isLength(0))
	' console.log(rodash.isLength(1))
	' console.log(rodash.isLength(2))
	' console.log(rodash.isLength("a"))
	' console.log(rodash.isLength([1]))
	' console.log(rodash.isLength(1e1000000))

	' console.log(rodash.add(6, 4))

	' console.log(rodash.ceil(4.006))
	' console.log(rodash.ceil(6.004, 2))
	' console.log(rodash.ceil(6040, -2))

	' console.log(rodash.divide(1, 2))
	' console.log(rodash.divide(2, 1))
	' console.log(rodash.divide(1, 1))
	' console.log(rodash.divide(0, 1))
	' console.log(rodash.divide(0, 0))
	' console.log(rodash.divide("a", 0))


	' console.log(rodash.floor(4.006))
	' console.log(rodash.floor(0.046, 2))
	' console.log(rodash.floor(4060, -2))

	' console.log(rodash.max([4, 2, 8, 6]))

	' objects = [{ "n": 3, "a": 1 }, { "n": 1, "a": 2 }, { "n": 2, "a": 12 }]
	' console.log(rodash.maxBy(objects, function(o)
	' 	return o.n
	' end function))
	' console.log(rodash.maxBy(objects, "a"))

	' console.log(rodash.mean([4, 2, 8, 6]))
	' console.log(rodash.meanBy(objects, function(o)
	' 	return o.n
	' end function))
	' console.log(rodash.meanBy(objects, "a"))

	' console.log(rodash.min([4, 2, 8, 6]))
	' console.log(rodash.minBy(objects, function(o)
	' 	return o.n
	' end function))
	' console.log(rodash.minBy(objects, "a"))

	' console.log(rodash.multiply(6, 4))

	' console.log(rodash.subtract(6, 4))

	' console.log(rodash.sum([4, 2, 8, 6]))
	' console.log(rodash.sumBy(objects, function(o)
	' 	return o.n
	' end function))
	' console.log(rodash.sumBy(objects, "a"))

	' console.log(rodash.clamp(-10, -5, 5))
	' console.log(rodash.clamp(10, -5, 5))

	' console.log(rodash.inRange(3, 2, 4))
	' console.log(rodash.inRange(4, 8))
	' console.log(rodash.inRange(4, 2))
	' console.log(rodash.inRange(2, 2))
	' console.log(rodash.inRange(1.2, 2))
	' console.log(rodash.inRange(5.2, 4))
	' console.log(rodash.inRange(-3, -2, -6))


	' console.log(rodash.random(0, 5))
	' console.log(rodash.random(5))
	' console.log(rodash.random(5, true))
	' console.log(rodash.random(1.2, 5.2))

	' console.log(rodash.assign({ "a": 0 }, [{ "a": 1 }, { "c": 3 }, { "b": -1 }]))

	' obj = { "a": [{ "b": { "c": 3 } }, 4] }
	' console.log(rodash.at(obj, ["a.0.b.c", "a[1]"]))

	' console.log(rodash.camelCase("Foo Bar"))
	' console.log(rodash.camelCase("--foo-bar--"))
	' console.log(rodash.camelCase("__FOO_BAR__"))

	' console.log(rodash.endsWith("abc", "c"))
	' console.log(rodash.endsWith("abc", "b"))
	' console.log(rodash.endsWith("abc", "b", 2))

	' console.log(rodash.escape("fred, barney, & pebbles"))

	' console.log(rodash.escapeRegExp("[lodash](https://lodash.com/)"))

	' console.log(rodash.kebabCase("Foo Bar"))
	' console.log(rodash.kebabCase("--foo-bar--"))
	' console.log(rodash.kebabCase("__FOO_BAR__"))

	' console.log(rodash.lowerCase("Foo Bar"))
	' console.log(rodash.lowerCase("--foo-bar--"))
	' console.log(rodash.lowerCase("__FOO_BAR__"))

	' console.log(rodash.lowerFirst("Fred"))
	' console.log(rodash.lowerFirst("FRED"))
	' console.log(rodash.lowerFirst("fred"))

	' console.log(rodash.zipObject(["a", "b", "c"], [1, 2]))
	' console.log(rodash.internal.aaToString(rodash.zipObjectDeep(["a.b[0].c", "a.b[1].d"], [1, 2])))
	' console.log(rodash.internal.aaToString({"a":{"b":[{"c":1},{"d":2}]}}))

	' console.log(rodash.internal.arrayToString(rodash.zip([["a", "b"], [1, 2], [true, false]])))

	' console.log(rodash.sortedIndex([20, 30, 40, 50], 40))
	' console.log(rodash.tail([20, 30, 40, 50]))

	' console.log(rodash.take([20, 30, 40, 50]))
	' console.log(rodash.take([20, 30, 40, 50], 2))
	' console.log(rodash.take([20, 30, 40, 50], 6))
	' console.log(rodash.take([20, 30, 40, 50], 0))

	' console.log(rodash.takeRight([20, 30, 40, 50]))
	' console.log(rodash.takeRight([20, 30, 40, 50], 2))
	' console.log(rodash.takeRight([20, 30, 40, 50], 6))
	' console.log(rodash.takeRight([20, 30, 40, 50], 0))

	' console.log(rodash.internal.arrayToString(rodash.union([[2], [1, 2, 3]])))
	' console.log(rodash.internal.arrayToString(rodash.uniq([2, 1, 2])))

	' rodash.forEach([1, 2], function(value)
	' 	console.log(value)
	' end function)

	' rodash.forEach({ "a": 1, "b": 2 }, function(value, key)
	' 	console.log(key)
	' end function)

	' rodash.forEachRight({ "a": 1, "b": 2 }, function(value, key)
	' 	console.log(key)
	' end function)

	' arr = [1, 2, 3, 4]
	' console.log(rodash.internal.arrayToString(rodash.shuffle(arr)))
	' console.log(rodash.internal.arrayToString(rodash.shuffle({ "n": 3, "a": 1 })))

	' console.log(rodash.size([1,2,3]))
	' console.log(rodash.size({ "a": 1, "b": 2 }))
	' console.log(rodash.size("pebbles"))

	' users = [
	' 	{ "user": "fred",   "age": 48 },
	' 	{ "user": "barney", "age": 36 },
	' 	{ "user": "fred",   "age": 40 },
	' 	{ "user": "barney", "age": 34 },
	' 	{ "user": "al", "age": 99 }
	' ]

	' console.log(rodash.internal.arrayToString(users))

	' console.log(rodash.internal.arrayToString(rodash.sortBy(users, ["user", "age"])))

	' console.log(rodash.internal.arrayToString(rodash.sortBy(users, function(o)
	' 	return o.user
	' end function)))

	' console.log(rodash.internal.arrayToString(rodash.sortBy(users, function(o)
	' 	return o.age
	' end function)))

	' console.log(rodash.internal.arrayToString(rodash.sortBy(users, function(o)
	' 	return o.james
	' end function)))

	' saves = ["profile", "settings", "dog"]

	' m.done = rodash.after(saves.count(), function()
	' 	console.log("done saving!")
	' end function)

	' m.done()
	' m.done()
	' m.done()
	' m.done()
	' m.done()
	
	' rodash.forEach(saves, function(value)
	' 	console.log(value + " hey")
	' 	m.done()
	' end function)

	' square = function(n)
	' 	return n * n
	' end function

	' console.log(rodash.internal.arrayToString(rodash.map([4, 8], square)))

	' users = [
	' 	{ "user": "fred",   "age": 48 },
	' 	{ "user": "barney", "age": 36 },
	' 	{ "user": "fred",   "age": 40 },
	' 	{ "user": "barney", "age": 34 },
	' 	{ "user": "al", "age": 99 }
	' ]

	' console.log(rodash.internal.arrayToString(rodash.map(users, "user")))

	' console.log(rodash.map(["6", "8", "10"], rodash.ary(rodash.round, 1)))

	' rodash.slice(rodash.shuffle(data), 10)

	' console.log(rodash.reduce([1, 2], function(sum, n)
	' 	return sum + n
	' end function, 10))

	' console.log(rodash.internal.aaToString(rodash.reduce({  "a": 1,  "b": 2,  "c": 1 }, function(result, value, key)
	' 		if rodash.isInvalid(result[value.toStr()]) then result[value.toStr()] = []
	' 		result[value.toStr()].push(key)
	' 	  return result
	' end function, {})))

	' rodash.forIn(new Foo(), function(value, key)
	' 	console.log(key)
	' end function)

	' rodash.forInRight(new Foo(), function(value, key)
	' 	console.log(key)
	' end function)

	' rodash.forOwn(new Foo(), function(value, key)
	' 	console.log(key)
	' end function)

	' rodash.forOwnRight(new Foo(), function(value, key)
	' 	console.log(key)
	' end function)
	' console.log((rodash.functions(new Foo())))
	
end sub


Class Foo
	public a as integer = 1
	public b as integer = 2

	public function walk()
		print "hello"
	end function
end class