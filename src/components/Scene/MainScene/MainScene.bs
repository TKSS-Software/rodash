import "pkg:/source/common.bs"

sub init()
	m.username = "tyler"
	' console.info(`HELLO ${m.username}`)
	' console.warn(`HELLO ${m.username}`)
	' console.error(`HELLO ${m.username}`)
	' console.log(`HELLO ${m.username}`)
	' console.assert(true, `HELLO ${m.username}`)
	' console.assert(false, `HELLO ${m.username}`)
	util.getNodeById("username").text = `${m.username}`

	' console.log(_.chunk(["a", "b", "c", "d", "e"], 1))
	' console.log(_.compact([0, 1, false, 2, "", 3]))
	' console.log(_.concat([0], [1,2,[3, 4]]))
	' console.log(_.difference([2, 1], [2, 3]))
	' console.log(_.differenceBy([2.1, 1.2], [2.3, 3.4], _.cint))
	' console.log(_.differenceBy([{ "x": 2 }, { "x": 1 }], [{ "x": 1 }], "x")[0])
	' console.log(_.differenceBy([2.1, 1.2], [2.3, 3.4], _.cint))

	' ? _.isEqual("a", "b")
	' ? _.isEqual("a", "a")
	' objects = [{ "x": 1, "y": 2 }, { "x": 2, "y": 1 }]
	' console.log(_.internal.arrayToString(_.differenceWith(objects, [{ "x": 1, "y": 2 }], _.isEqual)))
	' console.log(_.drop([1, 2, 3, 4], 2))
	' console.log(_.dropRight([1, 2, 3, 4], 2))

	' users = [
	' 	{ "user": "barney",  "active": true },
	' 	{ "user": "fred",    "active": false },
	' 	{ "user": "pebbles", "active": false }
	' ]
	' console.log(_.dropRightWhile(users, function(user)
	' 	return NOT user.active
	' end function)[0])

	' users = [
	' 	{ "user": "barney",  "active": false },
	' 	{ "user": "fred",    "active": false },
	' 	{ "user": "pebbles", "active": true }
	' ]
	' console.log(_.internal.arrayToString(_.dropWhile(users, function(user)
	' 	return NOT user.active
	' end function)))
	' console.log(_.internal.arrayToString(_.dropWhile(users, { "user": "barney", "active": false })))
	' console.log(_.internal.arrayToString(_.dropWhile(users, ["active", false])))
	' console.log(_.internal.arrayToString(_.dropWhile(users, "active")))

	' console.log(_.fill([1, 2, 3], "a"))
	' console.log(_.fill([4, 6, 8, 10], "*", 1, 3))
	' console.log(_.fill([4, 6, 8, 10, 12, 16, 20], "*", 2, 4))

	' users = [
	' 	{ "user": "barney",  "active": false },
	' 	{ "user": "fred",    "active": false },
	' 	{ "user": "pebbles", "active": true }
	' ]
	' console.log(_.findIndex(users, function(o)
	' 	return o.user = "barney"
	' end function))
	' console.log(_.findIndex(users, { "user": "fred", "active": false }))
	' console.log(_.findIndex(users, ["active", false ]))
	' console.log(_.findIndex(users, "active"))

	' users = [
	' 	{ "user": "barney",  "active": true },
	' 	{ "user": "fred",    "active": false },
	' 	{ "user": "pebbles", "active": false }
	' ]
	' console.log(_.findLastIndex(users, function(o)
	' 	return o.user = "pebbles"
	' end function))
	' console.log(_.findLastIndex(users, { "user": "barney", "active": true }))


	' console.log(_.first([1, 2, 3]))
	' console.log(_.head([1, 2, 3]))
	' console.log(_.head([]))

	' console.log(_.flatten([1, [2, [3, [4]], 5]]))
	' console.log(_.flattenDeep([1, [2, [3, [4]], 5]]))

	' console.log(_.indexOf([1, 2, 1, 2], 2))
	' console.log(_.indexOf([1, 2, 1, 2], 2, 2))
	' console.log(_.initial([1, 2, 3]))
	' console.log(_.internal.arrayToString(_.intersection([2, 1], [2, 3])))
	' console.log(_.intersection([2, 1, 0, 3], [2, 3, 5, 6]))
	' console.log(_.internal.arrayToString(_.intersectionBy([2.1, 1.2], [2.3, 3.4], _.floor)))
	' arrayOne = [{"x": 1 }]
	' arrayTwo = [{ "x": 2 }, { "x": 1 }]
	' console.log(_.internal.arrayToString(_.intersectionBy(arrayOne, arrayTwo, "x")))

	' console.log(_.gt(3, 1))
	' console.log(_.gt(3, 3))
	' console.log(_.gt(1, 3))

	' console.log(_.gte(3, 1))
	' console.log(_.gte(3, 3))
	' console.log(_.gte(1, 3))

	' console.log(_.isDateTime(CreateObject("roDateTime")))
	' console.log(_.isDateTime("Mon April 23 2012"))

	' console.log(_.isEmpty(invalid))
	' console.log(_.isEmpty(true))
	' console.log(_.isEmpty(1))
	' console.log(_.isEmpty([1,2,3]))
	' console.log(_.isEmpty({"a": 1}))
	' console.log(_.isEmpty(""))
	' console.log(_.isEmpty("a"))

	' objectA = [
	' 	{ "user": "barney",  "active": true },
	' 	{ "user": "fred",    "active": false },
	' 	{ "user": "pebbles", "active": false }
	' ]

	' objectB = [
	' 	{ "user": "barney",  "active": true },
	' 	{ "user": "fred",    "active": false },
	' 	{ "user": "pebbles", "active": false }
	' ]
	' console.log(_.isEqual(objectA, objectB))

	' objectA = ["hello", "goodbye"]
	' objectB = ["hi", "goodbye"]

	' objectA = CreateObject("roSGNode", "node")
	' objectA.id = "goodbye"
	' objectB = CreateObject("roSGNode", "node")
	' objectB.id = "hello"


	' console.log(_.isEqualWith(objectA, objectB, function(objValue, othValue)
	' 	if isGreeting(objValue) AND isGreeting(othValue) then
	' 	    return true
	' 	end if
	' 	return false
	' end function))

	' function isGreeting(value)
	' 	regex = createObject("roRegex", "^h(?:i|ello)$", "i")
	' 	return regex.isMatch(value)
	' end function

	' console.log(_.isError({
	' 	"status": "error"
	' }))

	' console.log(_.isFinite(1))
	' console.log(_.isFinite(1e1000000))

	' console.log(_.isLength(-1))
	' console.log(_.isLength(0))
	' console.log(_.isLength(1))
	' console.log(_.isLength(2))
	' console.log(_.isLength("a"))
	' console.log(_.isLength([1]))
	' console.log(_.isLength(1e1000000))

	' console.log(_.add(6, 4))

	' console.log(_.ceil(4.006))
	' console.log(_.ceil(6.004, 2))
	' console.log(_.ceil(6040, -2))

	' console.log(_.divide(1, 2))
	' console.log(_.divide(2, 1))
	' console.log(_.divide(1, 1))
	' console.log(_.divide(0, 1))
	' console.log(_.divide(0, 0))
	' console.log(_.divide("a", 0))


	' console.log(_.floor(4.006))
	' console.log(_.floor(0.046, 2))
	' console.log(_.floor(4060, -2))

	' console.log(_.max([4, 2, 8, 6]))

	' objects = [{ "n": 3, "a": 1 }, { "n": 1, "a": 2 }, { "n": 2, "a": 12 }]
	' console.log(_.maxBy(objects, function(o)
	' 	return o.n
	' end function))
	' console.log(_.maxBy(objects, "a"))

	' console.log(_.mean([4, 2, 8, 6]))
	' console.log(_.meanBy(objects, function(o)
	' 	return o.n
	' end function))
	' console.log(_.meanBy(objects, "a"))

	' console.log(_.min([4, 2, 8, 6]))
	' console.log(_.minBy(objects, function(o)
	' 	return o.n
	' end function))
	' console.log(_.minBy(objects, "a"))

	' console.log(_.multiply(6, 4))

	' console.log(_.subtract(6, 4))

	' console.log(_.sum([4, 2, 8, 6]))
	' console.log(_.sumBy(objects, function(o)
	' 	return o.n
	' end function))
	' console.log(_.sumBy(objects, "a"))

	' console.log(_.clamp(-10, -5, 5))
	' console.log(_.clamp(10, -5, 5))

	' console.log(_.inRange(3, 2, 4))
	' console.log(_.inRange(4, 8))
	' console.log(_.inRange(4, 2))
	' console.log(_.inRange(2, 2))
	' console.log(_.inRange(1.2, 2))
	' console.log(_.inRange(5.2, 4))
	' console.log(_.inRange(-3, -2, -6))


	' console.log(_.random(0, 5))
	' console.log(_.random(5))
	' console.log(_.random(5, true))
	' console.log(_.random(1.2, 5.2))

	' console.log(_.assign({ "a": 0 }, [{ "a": 1 }, { "c": 3 }, { "b": -1 }]))

	' obj = { "a": [{ "b": { "c": 3 } }, 4] }
	' console.log(_.at(obj, ["a.0.b.c", "a[1]"]))

	' console.log(_.camelCase("Foo Bar"))
	' console.log(_.camelCase("--foo-bar--"))
	' console.log(_.camelCase("__FOO_BAR__"))

	' console.log(_.endsWith("abc", "c"))
	' console.log(_.endsWith("abc", "b"))
	' console.log(_.endsWith("abc", "b", 2))

	' console.log(_.escape("fred, barney, & pebbles"))

	' console.log(_.escapeRegExp("[lodash](https://lodash.com/)"))

	' console.log(_.kebabCase("Foo Bar"))
	' console.log(_.kebabCase("--foo-bar--"))
	' console.log(_.kebabCase("__FOO_BAR__"))

	' console.log(_.lowerCase("Foo Bar"))
	' console.log(_.lowerCase("--foo-bar--"))
	' console.log(_.lowerCase("__FOO_BAR__"))

	' console.log(_.lowerFirst("Fred"))
	' console.log(_.lowerFirst("FRED"))
	' console.log(_.lowerFirst("fred"))

	' console.log(_.zipObject(["a", "b", "c"], [1, 2]))
	' console.log(_.internal.aaToString(_.zipObjectDeep(["a.b[0].c", "a.b[1].d"], [1, 2])))

	' console.log(_.internal.arrayToString(_.zip([["a", "b"], [1, 2], [true, false]])))

	' console.log(_.sortedIndex([20, 30, 40, 50], 40))
	' console.log(_.tail([20, 30, 40, 50]))

	' console.log(_.take([20, 30, 40, 50]))
	' console.log(_.take([20, 30, 40, 50], 2))
	' console.log(_.take([20, 30, 40, 50], 6))
	' console.log(_.take([20, 30, 40, 50], 0))

	' console.log(_.takeRight([20, 30, 40, 50]))
	' console.log(_.takeRight([20, 30, 40, 50], 2))
	' console.log(_.takeRight([20, 30, 40, 50], 6))
	' console.log(_.takeRight([20, 30, 40, 50], 0))

	' console.log(_.internal.arrayToString(_.union([[2], [1, 2, 3]])))
	' console.log(_.internal.arrayToString(_.uniq([2, 1, 2])))

	' _.forEach([1, 2], function(value)
	' 	console.log(value)
	' end function)

	' _.forEach({ "a": 1, "b": 2 }, function(value, key)
	' 	console.log(key)
	' end function)

	' _.forEachRight({ "a": 1, "b": 2 }, function(value, key)
	' 	console.log(key)
	' end function)

	' arr = [1, 2, 3, 4]
	' console.log(_.internal.arrayToString(_.shuffle(arr)))
	' console.log(_.internal.arrayToString(_.shuffle({ "n": 3, "a": 1 })))

	' console.log(_.size([1,2,3]))
	' console.log(_.size({ "a": 1, "b": 2 }))
	' console.log(_.size("pebbles"))

	' users = [
	' 	{ "user": "fred",   "age": 48 },
	' 	{ "user": "barney", "age": 36 },
	' 	{ "user": "fred",   "age": 40 },
	' 	{ "user": "barney", "age": 34 },
	' 	{ "user": "al", "age": 99 }
	' ]

	' console.log(_.internal.arrayToString(_.sortBy(users, ["user", "age"])))

	' console.log(_.internal.arrayToString(_.sortBy(users, function(o)
	' 	return o.user
	' end function)))

	' console.log(_.internal.arrayToString(_.sortBy(users, function(o)
	' 	return o.age
	' end function)))

	' console.log(_.internal.arrayToString(_.sortBy(users, function(o)
	' 	return o.james
	' end function)))

	' saves = ["profile", "settings", "dog"]

	' m.done = _.after(saves.count(), function()
	' 	console.log("done saving!")
	' end function)

	' m.done()
	' m.done()
	' m.done()
	' m.done()
	' m.done()
	
	' _.forEach(saves, function(value)
	' 	console.log(value + " hey")
	' 	m.done()
	' end function)

	' square = function(n)
	' 	return n * n
	' end function

	' console.log(_.internal.arrayToString(_.map([4, 8], square)))

	' users = [
	' 	{ "user": "fred",   "age": 48 },
	' 	{ "user": "barney", "age": 36 },
	' 	{ "user": "fred",   "age": 40 },
	' 	{ "user": "barney", "age": 34 },
	' 	{ "user": "al", "age": 99 }
	' ]

	' console.log(_.internal.arrayToString(_.map(users, "user")))

	' console.log(_.map(["6", "8", "10"], _.ary(_.round, 1)))

	' _.slice(_.shuffle(data), 10)

	' console.log(_.reduce([1, 2], function(sum, n)
	' 	return sum + n
	' end function, 10))

	' console.log(_.internal.aaToString(_.reduce({  "a": 1,  "b": 2,  "c": 1 }, function(result, value, key)
	' 		if _.isInvalid(result[value.toStr()]) then result[value.toStr()] = []
	' 		result[value.toStr()].push(key)
	' 	  return result
	' end function, {})))

	' _.forIn(new Foo(), function(value, key)
	' 	console.log(key)
	' end function)

	' _.forInRight(new Foo(), function(value, key)
	' 	console.log(key)
	' end function)

	' _.forOwn(new Foo(), function(value, key)
	' 	console.log(key)
	' end function)

	' _.forOwnRight(new Foo(), function(value, key)
	' 	console.log(key)
	' end function)

	console.log((_.functions(new Foo())))
end sub


Class Foo
	public a as integer = 1
	public b as integer = 2

	public function walk()
		print "hello"
	end function
end class