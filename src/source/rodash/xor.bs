namespace rodash
    ' Creates a duplicate-free version of an array, in which only the first occurrence of each element is kept. The order of result values is determined by the order they occur in the array.
    ' By default, when comparing arrays and associative arrays the function will compare the values on the elements. If the strict parameter is set to true, the function will compare the references of the AA and Array elements.
    ' @since 0.0.29
    ' @category Array
    ' @param {Array[]} array - The arrays to inspect
    ' @param {Boolean} strict - If true, the function will compare the references of the AA and Array elements
    ' @returns {Array} Returns the new array of filtered values.
    ' @example
    ' rodash.xor([[2, 1], [2, 3]]) // => [1, 3]
    ' rodash.xor([[2, 1], [2, 3], [2, 3]]) // => [1]
    function xor(arrays as Object, strict = false as Object) as Object
        ' Create an array to store the result of the XOR operation (elements with count 1)
        resultArray = []
        removeArray = []

        for each array in arrays
            for each item in array
                ' If the item is not in the result array, add it
                if rodash.findIndex(resultArray, item, 0, strict) = -1
                    resultArray.push(item)
                else
                    ' If the item is already in the result array, remove it
                    removeArray.push(item)
                end if
            end for
        end for

        while removeArray.count() > 0
            ' Remove the first occurrence of the item in removeArray from resultArray
            resultArray.delete(rodash.findIndex(resultArray, removeArray[0]))
            ' Remove the first item from removeArray
            removeArray.delete(0)
        end while

        return resultArray
    end function
end namespace
