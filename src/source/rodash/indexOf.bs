import "isArray.bs"
import "isEqual.bs"
import "isInvalid.bs"

namespace rodash
  '/**
  ' * @name indexOf
  ' * @description Gets the index at which the first occurrence of value is found in array using SameValueZero for equality comparisons. If fromIndex is negative, it's used as the offset from the end of array.
  ' * @param {Array} array - The array to inspect
  ' * @param {Dynamic} value - The value to search for
  ' * @param {Integer} fromIndex - The index to search from
  ' * @return {Integer} Returns the index of the matched value, else -1
  ' */
  function indexOf(array = [] as object, value = invalid, fromIndex = invalid)
    if NOT rodash.isArray(array) then return -1
    if rodash.isInvalid(fromIndex) then fromIndex = 0

    for index = fromIndex to array.count() -1
      item = array[index]
      if rodash.isEqual(item, value) then return index
    end for

    return -1
  end function
end namespace