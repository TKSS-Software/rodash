import "isAA.bs"
import "isArray.bs"
import "isFunction.bs"
import "isString.bs"

namespace _
  ' /**
  ' * @name map
  ' * @description Creates an array of values by running each element in collection thru iteratee. The iteratee is invoked with three arguments:(value, index|key, collection)
  ' * @param {Dynamic} collection - The collection to iterate over
  ' * @param {Dynamic} iteratee - The function invoked per iteration
  ' * @return {Array} Returns the new mapped array
  ' */
  function map(collection = {} as dynamic, iteratee = invalid as dynamic)
    if NOT _.isArray(collection) then return []

    returnArray = []

    for each item in collection
      if _.isString(iteratee) then
        if _.isAA(item) then returnArray.push(item[iteratee])
      else if _.isFunction(iteratee) then
        returnArray.push(iteratee(item))
      end if
    end for

    return returnArray
  end function
end namespace