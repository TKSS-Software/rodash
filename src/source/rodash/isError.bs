import "hasKeys.bs"
import "isAA.bs"
import "isNonEmptyString.bs"
import "stringIncludes.bs"

namespace _
  ' /**
  ' * @name isError
  ' * @description Assesses the passed object to determine if it is an Error Object.
  ' * @param {Dynamic} value - the object to assess
  ' * @return {Boolean} True if the object represents and error.
  ' */
  ' TODO: MORE SUPPORT - TRY/CATCH?
  function isError(value as dynamic) as boolean
    if _.isAA(value) then
      if _.isNonEmptyString(value.status) AND _.stringIncludes(value.status, "error") then return true

      errorCodes = _.internal.getConstants().BrightScriptErrorCodes
      if _.hasKeys(value, ["number", "message", "exception"]) then
        for each errorCode in errorCodes
          if value.number = errorCode then return true
        end for
      end if
    end if
    return false
  end function
end namespace